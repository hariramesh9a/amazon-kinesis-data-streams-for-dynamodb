{"ast":null,"code":"var _jsxFileName = \"/Users/goesamee/Documents/Work/GSI/External Content/DynamoDB_Streaming_Blog/BlogTemplate/ddb-streaming-ui/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Amplify, { API } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\nimport Toast from 'light-toast';\nimport * as mutations from './graphql/mutations';\nimport * as queries from './graphql/queries';\nAmplify.configure(awsconfig);\n\nfunction App() {\n  const [mylist, setMyList] = useState([]);\n  const todoUpdateYes = {\n    name: 'speed',\n    value: ''\n  };\n  const todoUpdateNo = {\n    name: 'Subscribe',\n    value: 'No'\n  };\n  useEffect(() => {\n    updateVals();\n\n    async function fetchData() {\n      const newTodo = await API.graphql({\n        query: queries.ListWindspeeds\n      }); // console.log(newTodo);\n      // const temp = Math.floor(Math.random() * 6) + 1 \n      // console.log(temp);\n    }\n\n    fetchData();\n  }, []);\n\n  const updateVals = () => {\n    (async () => {\n      const result = await API.graphql({\n        query: queries.ListWindspeeds,\n        fetchPolicy: \"no-cache\"\n      });\n      setMyList(result.data.listTodos.items);\n      console.log(result.data.listTodos.items);\n    })();\n  };\n\n  async function updateYes() {\n    await API.graphql({\n      query: mutations.createTodo,\n      variables: {\n        input: todoUpdateYes\n      }\n    });\n    updateVals();\n  }\n\n  async function updateNo() {\n    await API.graphql({\n      query: mutations.createTodo,\n      variables: {\n        input: todoUpdateNo\n      }\n    });\n    updateVals();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AmplifySignOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Send wind turbine data\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"App-buttonsYes\",\n    onClick: updateYes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"App-buttonsNo\",\n    onClick: updateNo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Stop\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Latest values\"), mylist.map((item, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, index, \" \", item.name, \" \", item.value)))));\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["/Users/goesamee/Documents/Work/GSI/External Content/DynamoDB_Streaming_Blog/BlogTemplate/ddb-streaming-ui/src/App.js"],"names":["React","useEffect","useState","Amplify","API","withAuthenticator","AmplifySignOut","awsconfig","Toast","mutations","queries","configure","App","mylist","setMyList","todoUpdateYes","name","value","todoUpdateNo","updateVals","fetchData","newTodo","graphql","query","ListWindspeeds","result","fetchPolicy","data","listTodos","items","console","log","updateYes","createTodo","variables","input","updateNo","map","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Amplify, {API} from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\nimport Toast from 'light-toast';\nimport * as mutations from './graphql/mutations';\nimport * as queries from './graphql/queries';\nAmplify.configure(awsconfig);\n\n\nfunction App() {\n\n  const [mylist, setMyList] = useState([]);\n\n  \n\n  const todoUpdateYes = {\n    \n    name: 'speed',\n    value: ''\n  };\n  \n  const todoUpdateNo = {\n    name: 'Subscribe',\n    value: 'No'\n  };\n\n  useEffect(() => {\n    updateVals();\n    async function fetchData() {\n    const newTodo = await API.graphql({ query: queries.ListWindspeeds});\n    // console.log(newTodo);\n    // const temp = Math.floor(Math.random() * 6) + 1 \n    // console.log(temp);\n  }\n  fetchData();\n  }, []);\n\n  const updateVals = () =>{\n  (async () => {\n    const result = await API.graphql({\n      query: queries.ListWindspeeds,\n      fetchPolicy: \"no-cache\",\n    });\n    setMyList(result.data.listTodos.items);\n    console.log(result.data.listTodos.items);\n  })();\n}\n\n  async function updateYes () {\n    await API.graphql({ query: mutations.createTodo, variables: {input: todoUpdateYes}});\n    updateVals();\n  }\n\n  async function updateNo () {\n    await API.graphql({ query: mutations.createTodo, variables: {input: todoUpdateNo}});\n    updateVals();\n  }\n\n  return (\n    <div className=\"App\">\n      <AmplifySignOut />\n      <header className=\"App-header\">\n        \n        {/* <h1>Would you like to subscribe emails?</h1>\n        <div className=\"App-buttons\">\n        <button className=\"App-buttonsYes\" onClick={updateYes}>Subscribe</button>\n        <button className=\"App-buttonsNo\" onClick={updateNo}>Unsubscribe</button>\n        </div> */}\n\n        <h1>Send wind turbine data</h1>\n        <div className=\"App-buttons\">\n        <button className=\"App-buttonsYes\" onClick={updateYes}>Start</button>\n        <button className=\"App-buttonsNo\" onClick={updateNo}>Stop</button>\n        </div>\n\n        <ul>\n        <h3>Latest values</h3>\n        {mylist.map((item, index) => (\n          <p key={index}>{index} {item.name} {item.value}</p>\n        ))}\n      </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}