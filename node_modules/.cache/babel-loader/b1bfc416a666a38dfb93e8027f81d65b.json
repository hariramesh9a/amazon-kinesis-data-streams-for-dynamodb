{"ast":null,"code":"var _jsxFileName = \"/Users/goesamee/Documents/Work/GSI/External Content/DynamoDB_Streaming_Blog/BlogTemplate/ddb-streaming-ui/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css'; // import { FiRefreshCcw } from 'react-icons/fi';\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport Amplify, { API } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\nimport * as mutations from './graphql/mutations';\nimport * as queries from './graphql/queries';\nimport toast from \"light-toast\";\nAmplify.configure(awsconfig);\nlibrary.add(fas);\n\nfunction App() {\n  const [mylist, setMyList] = useState([]);\n  const [loop, setLoop] = useState(10);\n  useEffect(() => {\n    updateVals();\n    const totalValues = mylist.map(n => n);\n    console.log('total->', totalValues);\n  }, []);\n\n  const updateVals = async () => {\n    const result = await API.graphql({\n      query: queries.listWindspeeds,\n      fetchPolicy: \"no-cache\"\n    });\n    setMyList(result.data.listWindspeeds.items); // console.log(result.data.listWindspeeds.items);\n  };\n\n  function sleep(milliseconds) {\n    const date = Date.now();\n    let currentDate = null;\n\n    do {\n      currentDate = Date.now();\n    } while (currentDate - date < milliseconds);\n  }\n\n  async function genValues() {\n    setLoop(4); // alert(\"Data generator started\");\n\n    for (let i = 0; i < loop; i++) {\n      const generateValues = {\n        value: Math.floor(Math.random() * 25) + 25\n      };\n      await API.graphql({\n        query: mutations.createWindspeed,\n        variables: {\n          input: generateValues\n        }\n      });\n      updateVals();\n      sleep(3000);\n    }\n  }\n\n  function updateYes() {\n    toast.success('Starting...');\n    genValues();\n    updateVals();\n  }\n\n  function updateNo() {\n    toast.success('Stopping...');\n    setLoop(0);\n    updateVals();\n  }\n\n  const refresh = () => {\n    // alert(\"refreshing\");\n    toast.success('Refreshing...');\n    updateVals();\n  };\n\n  const generateKeyValePair = (objdata, arraytoupdated) => {\n    Object.keys(objdata).forEach(function (key) {\n      var objNeeded = {\n        name: 'init',\n        value: -1\n      };\n      objNeeded['name'] = key;\n      objNeeded['value'] = objdata[key];\n      arraytoupdated.push(objNeeded); // console.log('key->', mylist);\n    });\n  };\n\n  mylist.map((item, index) => {\n    var objNeeded = {\n      name: 'init',\n      value: -1\n    };\n    objNeeded['name'] = index;\n    objNeeded['value'] = item.value;\n  });\n  const myChartArray = [];\n  generateKeyValePair(mylist, myChartArray);\n  console.log('keypair->', myChartArray);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AmplifySignOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Wind turbine data\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"App-buttonsYes\",\n    onClick: updateYes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Generate\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"DATA\"), mylist.map((item, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, item.value)))));\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["/Users/goesamee/Documents/Work/GSI/External Content/DynamoDB_Streaming_Blog/BlogTemplate/ddb-streaming-ui/src/App.js"],"names":["React","useEffect","useState","library","fas","Amplify","API","withAuthenticator","AmplifySignOut","awsconfig","mutations","queries","toast","configure","add","App","mylist","setMyList","loop","setLoop","updateVals","totalValues","map","n","console","log","result","graphql","query","listWindspeeds","fetchPolicy","data","items","sleep","milliseconds","date","Date","now","currentDate","genValues","i","generateValues","value","Math","floor","random","createWindspeed","variables","input","updateYes","success","updateNo","refresh","generateKeyValePair","objdata","arraytoupdated","Object","keys","forEach","key","objNeeded","name","push","item","index","myChartArray"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n// import { FiRefreshCcw } from 'react-icons/fi';\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport Amplify, {API} from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\nimport * as mutations from './graphql/mutations';\nimport * as queries from './graphql/queries';\nimport toast from \"light-toast\"\nAmplify.configure(awsconfig);\nlibrary.add(fas)\n\nfunction App() {\n  const [mylist, setMyList] = useState([]);\n  const [loop, setLoop] = useState(10);\n\n  useEffect(() => {\n    updateVals();\n    const totalValues = mylist.map((n) => n);\n      console.log('total->',totalValues);\n  }, []);\n\n  const updateVals = async() =>{\n      const result = await API.graphql({\n        query: queries.listWindspeeds,\n        fetchPolicy: \"no-cache\",\n      });\n      setMyList(result.data.listWindspeeds.items);\n      // console.log(result.data.listWindspeeds.items);\n    };\n\n  function sleep(milliseconds) {\n    const date = Date.now();\n    let currentDate = null;\n    do {\n      currentDate = Date.now();\n    } while (currentDate - date < milliseconds);\n  }\n\n  async function genValues () {\n    setLoop(4);\n    // alert(\"Data generator started\");\n    for (let i = 0; i < loop; i++) {\n    const generateValues = { value: Math.floor(Math.random() * 25) + 25};\n    await API.graphql({ query: mutations.createWindspeed, variables: { input: generateValues}});\n    updateVals();\n    sleep(3000);\n    }\n  }\n\n  function updateYes () {\n    toast.success('Starting...');\n    genValues();\n    updateVals();\n  }\n\n  function updateNo () {\n    toast.success('Stopping...');\n    setLoop(0);\n    updateVals();\n  }\n\n  const refresh = () => {\n    // alert(\"refreshing\");\n    toast.success('Refreshing...');\n    updateVals();\n  }\n\n  const generateKeyValePair = (objdata, arraytoupdated) => {\n    Object.keys(objdata).forEach(function(key) {\n    var objNeeded = { name: 'init', value: -1};\n    objNeeded['name'] = key;\n    objNeeded['value'] = objdata[key];\n    arraytoupdated.push(objNeeded);\n    // console.log('key->', mylist);\n  });}\n\n  mylist.map((item, index) => {\n    var objNeeded = { name: 'init', value: -1};\n    objNeeded['name'] = index;\n    objNeeded['value'] =item.value;\n  }\n  );\n\n  const myChartArray = [];\n  generateKeyValePair(mylist, myChartArray);\n  console.log('keypair->',myChartArray);\n\n\n  return (\n    <div className=\"App\">\n      <AmplifySignOut />\n      <header className=\"App-header\">\n\n        <h1>Wind turbine data</h1>\n        <div className=\"App-buttons\">\n        <button className=\"App-buttonsYes\" onClick={updateYes}>Generate</button>\n        {/* <button className=\"App-buttonsNo\" onClick={updateNo}>Stop</button> */}\n        {/* <FiRefreshCcw ><button className=\"App-buttonsNo\" onClick={refresh}>Refresh</button></FiRefreshCcw> */}\n        {/* <FontAwesomeIcon icon={['fas', 'sync']} className=\"fa-spin\"></FontAwesomeIcon> */}\n        {/* <FontAwesomeIcon icon={faHome} /> */}\n        {/* <FiRefreshCcw onClick={refresh} /> */}\n        </div>\n        \n        <ul>\n        <h3>DATA</h3>\n        {mylist.map((item, index) => (\n          <p key={index}>{item.value}</p>\n        ))}\n      </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}