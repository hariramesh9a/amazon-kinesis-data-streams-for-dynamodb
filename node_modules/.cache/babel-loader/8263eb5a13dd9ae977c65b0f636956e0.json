{"ast":null,"code":"var _jsxFileName = \"/Users/goesamee/Documents/Work/GSI/External Content/DynamoDB_Streaming_Blog/BlogTemplate/ddb-streaming-ui/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Amplify, { API } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\nimport * as mutations from './graphql/mutations';\nimport * as queries from './graphql/queries';\nAmplify.configure(awsconfig);\n\nfunction App() {\n  useEffect(() => {\n    updateVals();\n  }, []);\n  const [mylist, setMyList] = useState([]);\n  const [randVal, setRandVal] = useState(40);\n  const [loop, setLoop] = useState(3);\n\n  const updateVals = () => {\n    (async () => {\n      const result = await API.graphql({\n        query: queries.listWindspeeds,\n        fetchPolicy: \"no-cache\"\n      });\n      setMyList(result.data.listWindspeeds.items); // console.log(result.data.listWindspeeds.items);\n    })();\n  };\n\n  const random = () => {\n    let x = Math.floor(Math.random() * 25) + 25;\n    setRandVal(x);\n    console.log('x-->', x);\n    console.log('randval-->', randVal);\n  };\n\n  const generateValues = {\n    value: randVal\n  };\n\n  async function genValues() {\n    await API.graphql({\n      query: mutations.createWindspeed,\n      variables: {\n        input: generateValues\n      }\n    });\n  }\n\n  async function updateYes() {\n    for (let i = 0; i < loop; i++) {\n      random();\n      genValues();\n      updateVals();\n    }\n  }\n\n  async function updateNo() {\n    setLoop(0);\n    updateVals();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AmplifySignOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Send wind turbine data\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"App-buttonsYes\",\n    onClick: updateYes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"App-buttonsNo\",\n    onClick: updateNo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Stop\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"DATA\"), mylist.map((item, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, item.value)))));\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["/Users/goesamee/Documents/Work/GSI/External Content/DynamoDB_Streaming_Blog/BlogTemplate/ddb-streaming-ui/src/App.js"],"names":["React","useEffect","useState","Amplify","API","withAuthenticator","AmplifySignOut","awsconfig","mutations","queries","configure","App","updateVals","mylist","setMyList","randVal","setRandVal","loop","setLoop","result","graphql","query","listWindspeeds","fetchPolicy","data","items","random","x","Math","floor","console","log","generateValues","value","genValues","createWindspeed","variables","input","updateYes","i","updateNo","map","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Amplify, {API} from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\nimport * as mutations from './graphql/mutations';\nimport * as queries from './graphql/queries';\nAmplify.configure(awsconfig);\n\n\nfunction App() {\n\n  useEffect(() => {\n    updateVals();\n  }, []);\n\n  const [mylist, setMyList] = useState([]);\n  const [randVal, setRandVal] = useState(40);\n  const [loop, setLoop] = useState(3);\n\n  const updateVals = () =>{\n    (async () => {\n      const result = await API.graphql({\n        query: queries.listWindspeeds,\n        fetchPolicy: \"no-cache\",\n      });\n      setMyList(result.data.listWindspeeds.items);\n      // console.log(result.data.listWindspeeds.items);\n    })();\n  }\n\n  const random = () => {\n    let x = Math.floor(Math.random() * 25) + 25\n    setRandVal(x)\n    console.log('x-->',x)\n    console.log('randval-->',randVal)\n  }\n\n  const generateValues = { value: randVal};\n\n  async function genValues () {\n    await API.graphql({ query: mutations.createWindspeed, variables: { input: generateValues}});\n  }\n\n  async function updateYes () {\n    for (let i = 0; i < loop; i++) {\n    random();\n    genValues();\n    updateVals();\n    }\n  }\n\n  async function updateNo () {\n    setLoop(0);\n    updateVals();\n  }\n\n  return (\n    <div className=\"App\">\n      <AmplifySignOut />\n      <header className=\"App-header\">\n\n        <h1>Send wind turbine data</h1>\n        <div className=\"App-buttons\">\n        <button className=\"App-buttonsYes\" onClick={updateYes}>Start</button>\n        <button className=\"App-buttonsNo\" onClick={updateNo}>Stop</button>\n        </div>\n\n        <ul>\n        <h3>DATA</h3>\n        {mylist.map((item, index) => (\n          <p key={index}>{item.value}</p>\n        ))}\n      </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}