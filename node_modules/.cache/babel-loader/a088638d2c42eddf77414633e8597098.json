{"ast":null,"code":"var _jsxFileName = \"/Users/goesamee/Documents/Work/GSI/External Content/DynamoDB_Streaming_Blog/BlogTemplate/ddb-streaming-ui/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Amplify, { API } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\nimport Toast from 'light-toast';\nimport * as mutations from './graphql/mutations';\nimport * as queries from './graphql/queries';\nAmplify.configure(awsconfig);\n\nfunction App() {\n  const [mylist, setMyList] = useState([]);\n  const [randVal, setRandVal] = useState(40);\n  const [loop, setLoop] = useState(5);\n\n  const updateVals = () => {\n    (async () => {\n      const result = await API.graphql({\n        query: queries.listWindspeeds,\n        fetchPolicy: \"no-cache\"\n      });\n      setMyList(result.data.listWindspeeds.items);\n      console.log(result.data.listWindspeeds.items);\n    })();\n  };\n\n  useEffect(() => {\n    updateVals();\n\n    async function fetchData() {\n      const newTodo = await API.graphql({\n        query: queries.listWindspeeds\n      });\n    }\n\n    fetchData();\n  }, []);\n\n  const random = () => {\n    setRandVal(Math.floor(Math.random() * 25) + 25);\n  };\n\n  const generateValues = {\n    value: randVal\n  };\n  const todoUpdateNo = {};\n\n  async function updateYes() {\n    while (loop) {\n      random();\n      await API.graphql({\n        query: mutations.createWindspeed,\n        variables: {\n          input: generateValues\n        }\n      });\n      updateVals();\n    }\n  }\n\n  async function updateNo() {\n    // await API.graphql({ query: mutations.createTodo, variables: {input: todoUpdateNo}});\n    updateVals();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AmplifySignOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Send wind turbine data\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"App-buttonsYes\",\n    onClick: updateYes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"App-buttonsNo\",\n    onClick: updateNo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Stop\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Latest values\"), mylist.map((item, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, item.value)))));\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["/Users/goesamee/Documents/Work/GSI/External Content/DynamoDB_Streaming_Blog/BlogTemplate/ddb-streaming-ui/src/App.js"],"names":["React","useEffect","useState","Amplify","API","withAuthenticator","AmplifySignOut","awsconfig","Toast","mutations","queries","configure","App","mylist","setMyList","randVal","setRandVal","loop","setLoop","updateVals","result","graphql","query","listWindspeeds","fetchPolicy","data","items","console","log","fetchData","newTodo","random","Math","floor","generateValues","value","todoUpdateNo","updateYes","createWindspeed","variables","input","updateNo","map","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Amplify, {API} from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\nimport Toast from 'light-toast';\nimport * as mutations from './graphql/mutations';\nimport * as queries from './graphql/queries';\nAmplify.configure(awsconfig);\n\n\nfunction App() {\n\n  const [mylist, setMyList] = useState([]);\n  const [randVal, setRandVal] = useState(40);\n  const [loop, setLoop] = useState(5);\n\n  const updateVals = () =>{\n    (async () => {\n      const result = await API.graphql({\n        query: queries.listWindspeeds,\n        fetchPolicy: \"no-cache\",\n      });\n      setMyList(result.data.listWindspeeds.items);\n      console.log(result.data.listWindspeeds.items);\n    })();\n  }\n\n  useEffect(() => {\n    updateVals();\n    async function fetchData() {\n    const newTodo = await API.graphql({ query: queries.listWindspeeds});\n  }\n  fetchData();\n  }, []);\n\n  const random = () => {\n    setRandVal(Math.floor(Math.random() * 25) + 25)\n  }\n\n  const generateValues = {\n    value: randVal\n  };\n  \n  const todoUpdateNo = {\n    \n  };\n\n  async function updateYes () {\n    \n    while (loop) {\n    random();\n    await API.graphql({ query: mutations.createWindspeed, variables: {input: generateValues}});\n    updateVals();\n    }\n  }\n\n  async function updateNo () {\n    // await API.graphql({ query: mutations.createTodo, variables: {input: todoUpdateNo}});\n    updateVals();\n  }\n\n  return (\n    <div className=\"App\">\n      <AmplifySignOut />\n      <header className=\"App-header\">\n        \n        {/* <h1>Would you like to subscribe emails?</h1>\n        <div className=\"App-buttons\">\n        <button className=\"App-buttonsYes\" onClick={updateYes}>Subscribe</button>\n        <button className=\"App-buttonsNo\" onClick={updateNo}>Unsubscribe</button>\n        </div> */}\n\n        <h1>Send wind turbine data</h1>\n        <div className=\"App-buttons\">\n        <button className=\"App-buttonsYes\" onClick={updateYes}>Start</button>\n        <button className=\"App-buttonsNo\" onClick={updateNo}>Stop</button>\n        </div>\n\n        <ul>\n        <h3>Latest values</h3>\n        {mylist.map((item, index) => (\n          <p key={index}>{item.value}</p>\n        ))}\n      </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}