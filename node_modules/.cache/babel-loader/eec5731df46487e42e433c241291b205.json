{"ast":null,"code":"var _jsxFileName = \"/Users/goesamee/Documents/Work/GSI/External Content/DynamoDB_Streaming_Blog/BlogTemplate/ddb-streaming-ui/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { FiRefreshCcw } from 'react-icons/fi';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Amplify, { API } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\nimport * as mutations from './graphql/mutations';\nimport * as queries from './graphql/queries';\nimport toast from \"light-toast\";\nAmplify.configure(awsconfig);\n\nfunction App() {\n  useEffect(() => {\n    updateVals();\n  }, []);\n  const [mylist, setMyList] = useState([]);\n  const [loop, setLoop] = useState(4);\n\n  const updateVals = () => {\n    (async () => {\n      const result = await API.graphql({\n        query: queries.listWindspeeds,\n        fetchPolicy: \"no-cache\"\n      });\n      setMyList(result.data.listWindspeeds.items); // console.log(result.data.listWindspeeds.items);\n    })();\n  };\n\n  function sleep(milliseconds) {\n    const date = Date.now();\n    let currentDate = null;\n\n    do {\n      currentDate = Date.now();\n    } while (currentDate - date < milliseconds);\n  }\n\n  async function genValues() {\n    alert(\"Data generator started\");\n\n    for (let i = 0; i < loop; i++) {\n      const generateValues = {\n        value: Math.floor(Math.random() * 25) + 25\n      };\n      await API.graphql({\n        query: mutations.createWindspeed,\n        variables: {\n          input: generateValues\n        }\n      });\n      updateVals();\n      sleep(3000);\n      console.log(loop);\n    }\n  }\n\n  function updateYes() {\n    genValues();\n    updateVals();\n  }\n\n  function updateNo() {\n    alert(\"Data generator stopped\");\n    setLoop(0);\n    console.log(loop);\n    updateVals();\n  }\n\n  const refresh = () => {\n    // alert(\"refreshing\");\n    toast.loading('refreshing dashboard');\n    updateVals();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AmplifySignOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Wind turbine data\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"App-buttonsYes\",\n    onClick: updateYes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"App-buttonsNo\",\n    onClick: updateNo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Stop\"), /*#__PURE__*/React.createElement(FiRefreshCcw, {\n    onClick: refresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"DATA\"), mylist.map((item, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, item.value)))));\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["/Users/goesamee/Documents/Work/GSI/External Content/DynamoDB_Streaming_Blog/BlogTemplate/ddb-streaming-ui/src/App.js"],"names":["React","useEffect","useState","FiRefreshCcw","FontAwesomeIcon","Amplify","API","withAuthenticator","AmplifySignOut","awsconfig","mutations","queries","toast","configure","App","updateVals","mylist","setMyList","loop","setLoop","result","graphql","query","listWindspeeds","fetchPolicy","data","items","sleep","milliseconds","date","Date","now","currentDate","genValues","alert","i","generateValues","value","Math","floor","random","createWindspeed","variables","input","console","log","updateYes","updateNo","refresh","loading","map","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport { FiRefreshCcw } from 'react-icons/fi';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Amplify, {API} from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\nimport * as mutations from './graphql/mutations';\nimport * as queries from './graphql/queries';\nimport toast from \"light-toast\"\nAmplify.configure(awsconfig);\n\n\nfunction App() {\n\n  useEffect(() => {\n    updateVals();\n  }, []);\n\n  const [mylist, setMyList] = useState([]);\n  const [loop, setLoop] = useState(4);\n\n  const updateVals = () =>{\n    (async () => {\n      const result = await API.graphql({\n        query: queries.listWindspeeds,\n        fetchPolicy: \"no-cache\",\n      });\n      setMyList(result.data.listWindspeeds.items);\n      // console.log(result.data.listWindspeeds.items);\n    })();\n  }\n\n  function sleep(milliseconds) {\n    const date = Date.now();\n    let currentDate = null;\n    do {\n      currentDate = Date.now();\n    } while (currentDate - date < milliseconds);\n  }\n\n  async function genValues () {\n    alert(\"Data generator started\");\n    for (let i = 0; i < loop; i++) {\n    const generateValues = { value: Math.floor(Math.random() * 25) + 25};\n    await API.graphql({ query: mutations.createWindspeed, variables: { input: generateValues}});\n    updateVals();\n    sleep(3000);\n    console.log(loop);\n    }\n  }\n\n  function updateYes () {\n    genValues();\n    updateVals();\n  }\n\n  function updateNo () {\n    alert(\"Data generator stopped\");\n    setLoop(0);\n    console.log(loop);\n    updateVals();\n  }\n\n  const refresh = () => {\n    // alert(\"refreshing\");\n    toast.loading('refreshing dashboard');\n    updateVals();\n  }\n\n  return (\n    <div className=\"App\">\n      <AmplifySignOut />\n      <header className=\"App-header\">\n\n        <h1>Wind turbine data</h1>\n        <div className=\"App-buttons\">\n        <button className=\"App-buttonsYes\" onClick={updateYes}>Start</button>\n        <button className=\"App-buttonsNo\" onClick={updateNo}>Stop</button>\n        <FiRefreshCcw onClick={refresh} />\n        {/* <FiRefreshCcw ><button className=\"App-buttonsNo\" onClick={refresh}>Refresh</button></FiRefreshCcw> */}\n        <FontAwesomeIcon icon=\"spin\" />\n        </div>\n        \n        <ul>\n        <h3>DATA</h3>\n        {mylist.map((item, index) => (\n          <p key={index}>{item.value}</p>\n        ))}\n      </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}